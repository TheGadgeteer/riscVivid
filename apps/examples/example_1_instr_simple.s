# ------------------------------------------------------------------
# Example program with simple instructions.
# ------------------------------------------------------------------

        .text
        .global main
main:

# Instruction format of immediate-instructions
#       ADD Destination, Source, Value
# Adds the content of the source register with the immediate value and writes
# the result to the destination register

        add     t0, zero, 1     # adds 1 to content of register t0 and writes
                                # the result to register 1
        add     t1, zero, 8     # similar instruction, writing 8 to t1
                                # since zero is always 0, constants can be 
                                # generated by immediate instructions


# Instruction format of register-register-instructions
#       ADD Destination, Source1, Source2
# Adds the contents of the two source registers and writes the result to the
# destination register

        add     t2, t0, t1      # t2 = 9
        sub     t3, t1, t0      # t3 = 7
        mul     t4, t2, t3      # t4 = 63
        div     a0, t4, t3      # a0 = 9
        and     a1, t2, t3      # a1 = 9 AND 7 = 1001 AND 0111 = 0001 = 1
        or      a2, t2, t3      # a2 = 9 OR 7 = 1001 OR  0111 = 1111 = 15
        xor     a3, t2, t3      # a3 = 9 XOR 7 = 1001 XOR 0111 = 1110 = 14
                                # exclusive or
        sll     a4, t3, 2       # a4 = 0111 << 2 = 011100 = 28
                                # shift left, i.e. a multiplication with 2^n

# end of program
        add     a0, zero, 0     # exit code 0
        add     a7, zero, 93    # sycall 93: exit
        scall
